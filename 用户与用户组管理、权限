用户是什么？用户的类型
实现资源分派  认证的过程

uid:用户标识号   gid:组标识号    每个用户创建出来如果不分配组，那属于自身基本组
①超级用户root  权限特别大（uid=0 gid=0  生产环境建议不要使用）
②普通用户  （ uid>=500  一般权限系统管理，权限有限）
③程序用户  （1<=uid<500 服务资源使用 不能登录系统）
直接打 id 可以得到用户的组别


用户的账户文件：/etc/passwd
[root@vito363 ~]# tail -1 /etc/passwd
mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
上面中x是占位符
两个27分别为uid编号和gid编号
/var/lib/mysql是户主目录
/bin/bash 登录的shell（若为/sbin/nologin 则不能登录）

 /etc/shadow（非常重要，绝对不可泄露）
  作用：保存用户的帐号、密码、有效期等信息，每一行对应一个用户名的密码和信息
用户：资源获取标识符，资源分配，安全权限模型的核心要素之一
密码：来实现用户认证的

************添加用户  命令格式     只能超级用户才用权限操作
useradd [-u UID] [-g GID] [-d HOME] [-M] [-s] 用户名
添加用户  命令格式     只能超级用户才用权限操作
useradd [-u UID] [-g GID] [-d HOME] [-M] [-s] 用户名

[root@vito363 ~]# useradd haha
[root@vito363 ~]# tail -1 /etc/passwd
haha:x:889:889::/home/haha:/bin/bash

-u 自定义UID
[root@vito363 ~]# useradd -u 666 hehe
[root@vito363 ~]# tail -2 /etc/passwd
haha:x:889:889::/home/haha:/bin/bash
hehe:x:666:666::/home/hehe:/bin/bash

-g 自定义GID，前提是这个GID已经存在
[root@vito363 ~]# user add -g 0 aaa
-bash: user: command not found
[root@vito363 ~]# useradd -g 0 aaa
[root@vito363 ~]# tail -5 /etc/passwd
jiuye:x:888:0::/home/jiuye:/sbin/nologin
mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
haha:x:889:889::/home/haha:/bin/bash
hehe:x:666:666::/home/hehe:/bin/bash
aaa:x:890:0::/home/aaa:/bin/bash

-d 自定义家目录（家目录需事先不存在），需要使用绝对路径
useradd -d /root/桌面/baba baba
[root@vito363 ~]# tail -1 /etc/passwd
baba:x:891:891::/root/桌面/baba:/bin/bash

-M 不要创建用户家目录（系统帐号默认值）
-s 自定义shell，若没有默认为/bin/bash
[root@vito363 home]# useradd -M -s /sbin/nologin bbb
[root@vito363 home]# tail -1 /etc/passwd
bbb:x:892:892::/home/bbb:/sbin/nologin

[root@vito363 home]# useradd -u 732 -g 0 -s /sbin/nologin uuu
[root@vito363 home]# tail -1 /etc/passwd
uuu:x:732:0::/home/uuu:/sbin/nologin


****************yum仓库的搭建和yum方式安装
构建本地仓库
①：创建repo仓库文件（其他repo文件进行转移到其他目录）
②：编写配置文件
③：确认挂载光盘或rpm包是否存在
④：清除本地yum缓存  yum clean all
⑤：创建元数据信息、建立缓存。yum makecache

yum 是rpm程序包管理器的升级版
优点：解决依赖关系（方便、快捷）
原理：
仓库配置文件：/etc/yum.repos.d/*.repo

1：确定光盘是否被点亮

2：配置本地YUM仓库客户端的仓库配置文件，配置文件的路径在/etc/yum.repos.d目录下
①：进入目录，删除或移动无用的仓库配置文件
cd /etc/yum.repos.d   cp CentOS-Media.repo ./local.repo    mkdir backup
mv CentOS-* ./backup/

②：开始配置，配置客户端仓库配置文件，如下所示
先touch一个文件如下名字的，再写入下面内容
nano local.repo

[local]
name=local
baseurl=file:///media CentOS_6.8_Final
gpgcheck=0
enabled=1

③：清除之前的YUM仓库缓存
yum clean all

④建立新的本地YUM仓库缓存
yum makecache

3：验证本地YUM仓库的可用性,安装MySQL服务程序
yum install mysql-server

④开启MySQL服务验证程序是否安装成功，并查看其端口号
service mysqld start     ss -tnl

4：进入MySQL
mysql





构建网络yum仓库
①：下载repo仓库文件至/etc/yum.repos.d目录下   
例如wget http://mirrors.aliyun.com/repo/Centos-6.repo
(yum -y instal epel-release      wget -O epel.repo http://mirrors.aliyun.com/repo/epel-6.repo)
②：清除之前yum仓库元数据缓存。
②：直接使用yum工具进行在线装包即可。

1：删除/etc/yum.repos.d目录下的所有仓库配置文件
cd /etcyum.repos.d   rm -f *

2：拖拽三个文件到/etc/yum.repos.d目录
拖拽   ls

3：清除YUM缓存
yum clean all

4：构建网络Yum仓库缓存
yum makecache

5：验证网络yum仓库搭建效果
yum -y install gcc  

（gcc是个编译器）



yum详细指令：
安装       yum [选项] install 包1 包2....        选项：-y 自动回应 yes
yum -y install mysql-server php mysql-devel......
卸载       yum [选项] remove 包1 包2....             -q 静默模式
yum -y remove vsftpd

更新       yum [选项] update 包1 包2....
yum update httpd
检查更新   yum check-update
查看指定特性（可以是文件） 由哪个程序包提供：
           yum provides 关键字

清除缓存   yum clean all
构建缓存   yum makecache
模糊搜索   yum search 关键字
yum search mysql-ser*
查看指定包依赖的包关系
           yum deplist 包1 包2.....
